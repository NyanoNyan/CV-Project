{"version":3,"sources":["componenets/PersonalInfo.js","componenets/Education1.js","componenets/Experience.js","App1.js","index.js"],"names":["PerInfoForm","props","onSubmit","onChange","infoData","objSection","handleChange","e","target","value","name","parentElement","id","className","style","display","preventDefault","infoDataExtract","firstName","lastName","email","phone","type","placeholder","required","PreviewInfo","PersonalInfo","formView","this","isPreview","React","Component","EduForm","mainDisplay","btnDisplay","hideEditKey","editSpecific","deleteSection","eachEducation","educationData","includes","eduDataExtract","uni","location","courseName","startYear","endYear","onClick","PreviewEdu","clear","Education","isEdit","map","index","ExpForm","eachExperience","experienceData","jobTitle","companyName","description","rows","cols","PreviewExp","Experience","App","addSections","newEducation","uniqid","setState","prevState","education","newExperience","experience","alert","formData","section","state","obj","concat","mainValues","personalInfo","removeIdKey","filter","filterData","changePreview","textContent","initialState","bind","previewMessage","Education1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2aee39a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/PersonalInfo.css\"\n\nconst PerInfoForm = (props) => {\n    const { onSubmit, onChange} = props;\n    const infoData = props.infoData;\n    const objSection = \"personalInfo\";\n\n    // Functions\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const infoDataExtract = {\n            id: e.target.id,\n            firstName: e.target[0].value,\n            lastName: e.target[1].value,\n            email: e.target[2].value,\n            phone: e.target[3].value,\n        };\n\n        onSubmit(e, infoDataExtract, objSection);\n    }\n\n    const handleChange = (e) => {\n        onChange(objSection, e.target.value, e.target.name, e.target.parentElement.id);\n    }\n\n        // Edu form set up\n        let perInfoForm = (\n            <div className=\"container-info\"> \n                <div className=\"info-section\" style={{ display: \"block\"}}>\n                    <form id={infoData.id} className=\"form-info\" onSubmit={handleSubmit}>\n                        <label className=\"labels-info\">First Name: </label>\n                            <input\n                                onChange={handleChange}\n                                value={infoData.firstName}\n                                type=\"text\"\n                                className=\"input-form\"\n                                placeholder=\"Moredecai\"\n                                name=\"firstName\"\n                                required\n                            ></input>\n    \n                        <label className=\"labels-info\">Last Name: </label>\n                            <input\n                                onChange={handleChange}\n                                value={infoData.lastName}\n                                type=\"text\"\n                                className=\"input-form\"\n                                placeholder=\"Rigby\"\n                                name=\"lastName\"\n                                required\n                            ></input>\n                        \n                        <label className=\"labels-info\">Email: </label>\n                            <input\n                                onChange={handleChange}\n                                value={infoData.email}\n                                type=\"email\"\n                                className=\"input-form\"\n                                placeholder=\"regularshow@gmail.com\"\n                                name=\"email\"\n                                required\n                            ></input>\n    \n                        <label className=\"labels-edu\">Phone: </label>\n                            <input\n                                onChange={handleChange}\n                                value={infoData.phone}\n                                type=\"number\"\n                                className=\"input-form\"\n                                name=\"phone\"\n                                placeholder=\"07889898989\"\n                                required\n                            ></input>\n                    \n                        <button className=\"submit-button-info\">Submit</button>\n                    </form>\n    \n                </div>\n            </div>\n        );\n        return (\n            perInfoForm\n        )\n}\n\nconst PreviewInfo = (props) => {\n    const infoData = props.infoData;\n\n    return (\n        <div className=\"main-store-info\">\n                    <h2> { infoData.firstName } { infoData.lastName }</h2>\n                    <pre> Email:{ infoData.email }  Phone: { infoData.phone }  </pre>\n        </div>\n    )\n}\n\nclass PersonalInfo extends React.Component {\n    render() {\n        const { infoData, onSubmit, onChange, isPreview } = this.props;\n        let formView;\n\n        if (isPreview === false) {\n            formView = (\n            <PerInfoForm\n            infoData = { infoData }\n            onSubmit = {onSubmit}\n            onChange = {onChange}\n            /> \n            );\n\n        } else {\n            formView = (\n                formView = (\n                    <div>\n                        <PreviewInfo\n                        infoData = { infoData }\n                        />\n                    </div>\n                )\n            );\n        }\n\n        return (\n            <div className=\"div-box-main-info\">\n                {formView}\n            </div>   \n        )\n    }\n}\n\n\nexport default PersonalInfo;","import React from \"react\";\nimport \"../styles/Education.css\"\n\nconst EduForm = (props) => {\n    const { onSubmit, onChange, hideEditKey, editSpecific, deleteSection} = props;\n    const eachEducation = props.educationData;\n    const objSection = \"education\";\n    let mainDisplay;\n    let btnDisplay;\n\n    // Functions\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const eduDataExtract = {\n            id: e.target.id,\n            uni: e.target[0].value,\n            location: e.target[1].value,\n            courseName: e.target[2].value,\n            startYear: e.target[3].value,\n            endYear: e.target[4].value,\n        };\n\n        onSubmit(e, eduDataExtract, objSection);\n    }\n\n    const handleChange = (e) => {\n        onChange(objSection, e.target.value, e.target.name, e.target.parentElement.id);\n    }\n\n    // Logic for hiding and unhiding\n    if (hideEditKey.includes(eachEducation.id) === true ) {\n        mainDisplay = \"none\";\n        btnDisplay = \"block\";\n    } else {\n        mainDisplay = \"block\";\n        btnDisplay = \"none\";\n    }\n\n    // Edu form set up\n    let eduForm = (\n        <div className=\"container-edu\"> \n            <div className=\"education-section\" style={{ display: mainDisplay}}>\n                <form id={eachEducation.id} className=\"form-edu\" onSubmit={handleSubmit}>\n                    <label className=\"labels-edu\">University name: </label>\n                        <input\n                            onChange={handleChange}\n                            value={eachEducation.uni}\n                            type=\"text\"\n                            className=\"input-form\"\n                            placeholder=\"GG University\"\n                            name=\"uni\"\n                            required\n                        ></input>\n\n                    <label className=\"labels-edu\">University location: </label>\n                        <input\n                            onChange={handleChange}\n                            value={eachEducation.location}\n                            type=\"text\"\n                            className=\"input-form\"\n                            placeholder=\"London, UK\"\n                            name=\"location\"\n                            required\n                        ></input>\n                    \n                    <label className=\"labels-edu\">Course Name: </label>\n                        <input\n                            onChange={handleChange}\n                            value={eachEducation.courseName}\n                            type=\"text\"\n                            className=\"input-form\"\n                            placeholder=\"BSc in Game Theory\"\n                            name=\"courseName\"\n                            required\n                        ></input>\n\n                    <label className=\"labels-edu\">Course start year: </label>\n                        <input\n                            onChange={handleChange}\n                            value={eachEducation.startYear}\n                            type=\"number\"\n                            className=\"input-form\"\n                            name=\"startYear\"\n                            placeholder=\"2020\"\n                            required\n                        ></input>\n\n                    <label className=\"labels-edu\">Course end year: </label>\n                        <input\n                            onChange={handleChange}\n                            value={eachEducation.endYear}\n                            type=\"number\"\n                            className=\"input-form\"\n                            name=\"endYear\"\n                            placeholder=\"2022\"\n                            required\n                        ></input>\n                    \n                    <button className=\"submit-button\">Submit</button>\n\n                    <button \n                        className=\"delete-button\"\n                        onClick = {(e) => {deleteSection(e, objSection)}}\n                        name={eachEducation.id}\n                        >Delete\n                    </button>\n                </form>\n\n            </div>\n\n            <div \n                className=\"edit-edu\" \n                style={{ display: btnDisplay}}\n                onClick={(e) => {editSpecific(e)}}\n                >\n                <button name={eachEducation.id}>{eachEducation.uni}</button>\n            </div>\n            \n        </div>\n    );\n    return (\n        eduForm\n    )\n}\n\nconst PreviewEdu = (props) => {\n    const educationData = props.educationData;\n\n    return (\n        <div className=\"main-store-edu\">\n            <div className=\"textbox-uni-and-location\">\n                <pre className=\"bold-and-brash align-left\">{educationData.uni}</pre>\n                <pre className=\"bold-and-brash align-right\">{educationData.location}</pre>\n                <div style={{clear: \"both\"}}></div>\n            </div>\n\n            <div className=\"textbox-course-dates\">\n                <pre className=\"align-left\">{educationData.courseName}</pre>\n                <pre className=\"align-right\">{educationData.endYear}</pre>\n                <pre className=\"align-right\">{educationData.startYear} - </pre>\n                <div style={{clear: \"both\"}}></div>\n            </div>\n\n        </div>\n    )\n}\n\nclass Education extends React.Component {\n    render() {\n        const { educationData, onSubmit, onChange, hideEditKey,\n            editSpecific, isEdit, deleteSection, isPreview } = this.props;\n        let formView;\n\n        if (isPreview === false) {\n            formView = educationData.map((eachEducation, index) => (\n            <EduForm key={\"edu\"+index}\n            educationData = { eachEducation }\n            onSubmit = {onSubmit}\n            onChange = {onChange}\n            hideEditKey = {hideEditKey}\n            editSpecific = {editSpecific}\n            isEdit =  {isEdit}\n            deleteSection = {deleteSection}\n            /> \n            ));\n\n        } else {\n            formView = educationData.map((eachEducation, index) => (\n                formView = (\n                    <div key={\"edu\"+index}>\n                        <PreviewEdu\n                        educationData = { eachEducation }\n                        />\n                    </div>\n                )\n            ))\n        }\n\n        return (\n            <div className=\"div-box-main-edu\">\n                <h3 className=\"underline-val\">Education</h3>\n                {formView}\n            </div>   \n        )\n    }\n}\n\n\n\nexport default Education;\n\n// On change how to set that up to update the upper state in App.js\n// Need to look into onchange and rendering inside Education section.\n// Test make a state in Education, send that prop to App1 to change main state there.\n\n// Issue when you try to hide only that specific type of form, when adding for forms\n// How to only specify that particular form ? Use of id?\n// Add the delete button\n\n// Set up Preview with education data\n// Need to take out Add button in preview section\n\n\n// Old Code\n\n    // Logic for hiding and unhiding\n    // if (hideEditKey === eachEducation.id && hideEditKey != \"\" && isEdit === false) {\n    //     mainDisplay = \"none\";\n    //     btnDisplay = \"block\";\n    // } else if (isEdit === true && editSpecific === eachEducation.id && editSpecific != \"\"){\n    //     mainDisplay = \"block\";\n    //     btnDisplay = \"none\";\n    // } else {\n    //     mainDisplay = \"block\";\n    //     btnDisplay = \"none\";\n    // }","import React from \"react\";\nimport \"../styles/Experience.css\"\n\nconst ExpForm = (props) => {\n    const { onSubmit, onChange, hideEditKey, editSpecific, deleteSection} = props;\n    const eachExperience = props.experienceData;\n    const objSection = \"experience\";\n    let mainDisplay;\n    let btnDisplay;\n\n    // Functions\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const eduDataExtract = {\n            id: e.target.id,\n            jobTitle: e.target[0].value,\n            companyName: e.target[1].value,\n            startYear: e.target[2].value,\n            endYear: e.target[3].value,\n            description: e.target[4].value,\n        };\n\n        onSubmit(e, eduDataExtract, objSection);\n    }\n\n    const handleChange = (e) => {\n        onChange(objSection, e.target.value, e.target.name, e.target.parentElement.id);\n    }\n\n    // Logic for hiding and unhiding\n    if (hideEditKey.includes(eachExperience.id) === true ) {\n        mainDisplay = \"none\";\n        btnDisplay = \"block\";\n    } else {\n        mainDisplay = \"block\";\n        btnDisplay = \"none\";\n    }\n\n    // Exp form set up\n    let expForm = (\n        <div className=\"container-exp\"> \n            <div id=\"experience-section\" style={{ display: mainDisplay}}>\n                <form id={eachExperience.id} className=\"form-edu\" onSubmit={handleSubmit}>\n                    <label className=\"labels-exp\">Job Ttile: </label>\n                        <input\n                            onChange={handleChange}\n                            value={eachExperience.jobTitle}\n                            type=\"text\"\n                            className=\"input-form\"\n                            placeholder=\"Software Engineer\"\n                            name=\"jobTitle\"\n                            required\n                        ></input>\n\n                    <label className=\"labels-exp\">Company Name: </label>\n                        <input\n                            onChange={handleChange}\n                            value={eachExperience.companyName}\n                            type=\"text\"\n                            className=\"input-form\"\n                            placeholder=\"Google\"\n                            name=\"companyName\"\n                            required\n                        ></input>\n                    \n                    <label className=\"labels-exp\">Start Year: </label>\n                        <input\n                            onChange={handleChange}\n                            value={eachExperience.startYear}\n                            type=\"number\"\n                            className=\"input-form\"\n                            name=\"startYear\"\n                            placeholder=\"2018\"\n                            required\n                        ></input>\n\n                    <label className=\"labels-exp\">End Date: </label>\n                        <input\n                            onChange={handleChange}\n                            value={eachExperience.endYear}\n                            type=\"number\"\n                            className=\"input-form\"\n                            name=\"endYear\"\n                            placeholder=\"2020\"\n                            required\n                        ></input>\n\n                    <label className=\"labels-exp\">Role Description: </label>\n                        <textarea\n                            onChange={handleChange}\n                            value={eachExperience.description}\n                            className=\"input-form\"\n                            name=\"description\"\n                            rows=\"10\"\n                            cols=\"50\"\n                        ></textarea>\n                    \n                    <button className=\"submit-button\">Submit</button>\n\n                    <button \n                        className=\"delete-button\"\n                        onClick = {(e) => {deleteSection(e, objSection)}}\n                        name={eachExperience.id}\n                        >Delete\n                    </button>\n                </form>\n\n            </div>\n\n            <div \n                className=\"edit-edu\" \n                style={{ display: btnDisplay}}\n                onClick={(e) => {editSpecific(e)}}\n                >\n                <button name={eachExperience.id}>{eachExperience.jobTitle}</button>\n            </div>\n\n        </div>\n    );\n    return (\n        expForm\n    )\n}\n\nconst PreviewExp = (props) => {\n    const experienceData = props.experienceData;\n\n    return (\n        <div className=\"main-store-exp\">\n            <pre className=\"bold-and-brash heading-company-name\">{ experienceData.companyName }</pre>\n            <div className=\"textbox-title-date\">\n                <pre className=\"align-left\">{experienceData.jobTitle}</pre>\n                <pre className=\"align-right\">{experienceData.endYear}</pre>\n                <pre className=\"align-right\">{experienceData.startYear} - </pre>\n                <div style={{clear: \"both\"}}></div>\n            </div>\n            <pre className=\"work-description\">{experienceData.description}</pre>\n\n        </div>\n    )\n}\n\n class Experience extends React.Component {\n     render() {\n        const { experienceData, onSubmit, onChange, hideEditKey,\n            editSpecific, isEdit, deleteSection, isPreview } = this.props;\n        let formView;\n\n        if (isPreview === false) {\n            formView = experienceData.map((eachExperience, index) => (\n            <ExpForm key={\"exp\"+index}\n            experienceData = { eachExperience }\n            onSubmit = {onSubmit}\n            onChange = {onChange}\n            hideEditKey = {hideEditKey}\n            editSpecific = {editSpecific}\n            isEdit =  {isEdit}\n            deleteSection = {deleteSection}\n            /> \n            ));\n\n        } else {\n            formView = experienceData.map((eachExperience, index) => (\n                formView = (\n                    <div key={\"exp\"+index}>\n                        <PreviewExp\n                        experienceData = { eachExperience }\n                        />\n                    </div>\n                )\n            ))\n        }\n        \n         return(\n             <div>\n                <h3>Experience</h3>\n                {formView}\n             </div>\n         )\n     }\n }\n\n export default Experience\n\n // Test Exerpeince. Input\n // Then make Preview for Expereince","import React from \"react\";\nimport PersonalInfo from \"../src/componenets/PersonalInfo\"\nimport Education1 from \"../src/componenets/Education1\"\nimport Experience from \"../src/componenets/Experience\"\nimport uniqid from \"uniqid\";\nimport \"../src/styles/App.css\"\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.initialState = {\n\n            hideEditKey: [],\n            isEdit: false,\n\n            isPreview: false,\n\n            personalInfo: {\n                id: uniqid(),\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                phone: \"\"\n            },\n\n            education: [{\n                id: uniqid(),\n                uni: \"\",\n                location: \"\",\n                courseName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n            }],\n\n            experience: [{\n                id: uniqid(),\n                jobTitle: \"\",\n                companyName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n                description: \"\",\n            }]\n\n        }\n        this.state = this.initialState;\n\n        this.addSections = this.addSections.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.editSpecific = this.editSpecific.bind(this);\n        this.deleteSection = this.deleteSection.bind(this);\n    }\n\n    // Sets up blank object data for next input values\n    // Need to set it up for different sections such as switching between Education and Experience.\n    addSections = (e) => {\n        let type = e.target.className;\n        switch(type) {\n            case \"edu\":\n                const newEducation = {\n                    id: uniqid(),\n                    uni: \"\",\n                    location: \"\",\n                    courseName: \"\",\n                    startYear: \"\",\n                    endYear: \"\",\n                };\n                this.setState( prevState => ({\n                    education: [...prevState.education, newEducation]\n                }));\n    \n                break;\n            \n            case \"exp\":\n                const newExperience = {\n                    id: uniqid(),\n                    jobTitle: \"\",\n                    companyName: \"\",\n                    startYear: \"\",\n                    endYear: \"\",\n                    description: \"\",\n                };\n                this.setState( prevState => ({\n                    experience: [...prevState.experience, newExperience]\n                }));\n    \n                break;\n\n            default:\n                alert(\"Out of expressions\")\n        }\n    };\n    \n    onSubmit = (e, formData, section) => {\n        \n        e.preventDefault();\n        if (section === \"personalInfo\") {\n            this.setState({\n                [section]: formData\n            });\n        } else {\n            this.setState({\n                [section]: this.state[section].map(\n                    obj => obj.id === e.target.id ? formData : obj\n                ),\n                hideEditKey: this.state.hideEditKey.concat([e.target.id]),\n                isEdit: false\n            })\n        }\n    };\n\n    // Change the state depending on the form input\n    // One logic for personalInfo and the other for experience and education\n    onChange = (section, value, mainValues, id) => {\n        if (section === \"personalInfo\") {\n            this.setState(prevState => ({\n                [section] : {\n                    ...prevState.personalInfo,\n                    [mainValues]: value\n                }\n            }));\n        } else {\n            this.setState({\n                [section]: this.state[section].map(\n                    obj => obj.id === id ? {...obj, [mainValues]: value} : obj\n                )\n            });\n        }\n\n    }\n\n    editSpecific = (e) => {\n        // Removes key which does not need editing. So only key ids are left to show the form.\n        let removeIdKey = this.state.hideEditKey.filter((obj) => obj != e.target.name);\n        this.setState({\n            hideEditKey: removeIdKey,\n            isEdit: true\n        })\n    };\n\n    deleteSection = (e, section) => {\n        let filterData = this.state[section].filter((prevState) => prevState.id != e.target.name);\n        this.setState({\n            [section]: filterData,\n        })\n    };\n\n    changePreview = (e) => {\n        if (e.target.textContent === \"Preview CV\") {\n            this.setState({\n                isPreview: true\n            })\n        } else if (e.target.textContent === \"Back to Builder\") {\n            this.setState({\n                isPreview: false\n            })\n        }\n    };\n\n    render() {\n        // Setting up message for Preview button\n        let previewMessage;\n        if (this.state.isPreview) {\n            previewMessage = \"Back to Builder\"\n        } else {\n            previewMessage = \"Preview CV\"\n        }\n\n        return (\n            <div className=\"main-holder\">\n                <h2>CV Builder</h2>\n                <button\n                onClick={this.changePreview}\n                className=\"preview-btn\"\n                >{previewMessage}\n                </button>\n\n                <div className=\"line\"></div>\n\n                { this.state.isPreview ? null: <h3>Personal Information</h3>}\n                <PersonalInfo \n                infoData = {this.state.personalInfo}\n                onSubmit = {this.onSubmit}\n                onChange = {this.onChange}\n                deleteSection = {this.deleteSection}\n                isPreview = {this.state.isPreview}\n                />\n\n                <div className=\"line\"></div>\n\n                <Education1 \n                educationData = {this.state.education}\n                onSubmit = {this.onSubmit}\n                onChange = {this.onChange}\n                hideEditKey = {this.state.hideEditKey}\n                editSpecific = {this.editSpecific}\n                isEdit = {this.state.isEdit}\n                deleteSection = {this.deleteSection}\n                isPreview = {this.state.isPreview}\n                />\n                {/* Hides Add button if isPreview is True */}\n                { this.state.isPreview ? null: <button className=\"edu\"\n                onClick={this.addSections}>+ Education</button>}\n\n                <div className=\"line\"></div>\n\n                <Experience \n                experienceData = {this.state.experience}\n                onSubmit = {this.onSubmit}\n                onChange = {this.onChange}\n                hideEditKey = {this.state.hideEditKey}\n                editSpecific = {this.editSpecific}\n                isEdit = {this.state.isEdit}\n                deleteSection = {this.deleteSection}\n                isPreview = {this.state.isPreview}\n                />\n                {/* Hides Add button if isPreview is True */}\n                { this.state.isPreview ? null: <button className=\"exp\"\n                onClick={this.addSections}>+ Experience</button>}\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n// https://stackoverflow.com/questions/43638938/updating-an-object-with-setstate-in-react\n\n// old code\n//         \n// This gets the index of the object if the ids of state data and form data match\n// let getIndex = this.state.education.map((obj, index) => {\n//     if (obj.id === e.target.id) {\n//         return index;\n//     }\n// })\n// console.log(getIndex[0]);\n\n// Testing, issue with size box differing when changing between preview\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App1\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// https://stackoverflow.com/questions/28329382/understanding-unique-keys-for-array-children-in-react-js\n// https://stackoverflow.com/questions/43638938/updating-an-object-with-setstate-in-react\n// https://stackoverflow.com/questions/42894774/react-filter-method-without-mutating-state\n// https://www.pluralsight.com/guides/how-to-pass-data-between-react-components"],"sourceRoot":""}